/// <reference types="react" />
import { popupInstance, PopupProps } from '../popupsDef';
import { PopupItem } from './PopupItem';
import { PopupManager } from '../popupManager';
export declare type OpenPopupOptions<T> = Omit<T & PopupProps, 'isOpen'>;
export declare class PopupManagerInternal implements PopupManager {
    private openPopups;
    private readonly _closedPopups;
    onPopupsChangeEvents: Function[];
    private callPopupsChangeEvents;
    private get closedPopups();
    subscribeOnPopupsChange(callback: Function): void;
    get popups(): PopupItem[];
    open: <T>(componentClass: import("react").ComponentType<T>, popupProps?: Pick<T & PopupProps, "onClose" | Exclude<keyof T, "isOpen">>) => popupInstance;
    close(popupGuid: string): void;
    closeAll: () => void;
}
