{"ast":null,"code":"var _jsxFileName = \"/Users/mklfarha/Desktop/caparks/ca_parks/web/src/components/GPGModal.js\";\nimport React from 'react';\nimport Modal from 'react-modal';\nimport { MdClose } from \"react-icons/md\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('body');\nexport class GPGModal extends React.Component {\n  close() {\n    // `onClose` will close the modal and will call the callback defined in main.jsx\n    this.props.onClose('param', 'param2', 'param3');\n  }\n  render() {\n    // `isOpen` is managed only by 'PopupManager'\n    const {\n      isOpen\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      shouldCloseOnEsc: true,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [this.props.title, \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          style: {\n            float: \"right\",\n            cursor: \"pointer\"\n          },\n          onClick: () => this.close(),\n          children: /*#__PURE__*/_jsxDEV(MdClose, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 115\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 16\n      }, this), this.props.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Modal","MdClose","jsxDEV","_jsxDEV","setAppElement","GPGModal","Component","close","props","onClose","render","isOpen","shouldCloseOnEsc","children","title","style","float","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","content"],"sources":["/Users/mklfarha/Desktop/caparks/ca_parks/web/src/components/GPGModal.js"],"sourcesContent":["import React from 'react';\nimport Modal from 'react-modal';\nimport { MdClose } from \"react-icons/md\";\n\nModal.setAppElement('body');\nexport class GPGModal extends React.Component {\n    \n\n    close() {\n        // `onClose` will close the modal and will call the callback defined in main.jsx\n        this.props.onClose('param', 'param2', 'param3');\n    }\n\n    render() {\n        // `isOpen` is managed only by 'PopupManager'\n        const { isOpen } = this.props;\n\n        return (\n            <Modal isOpen={isOpen} shouldCloseOnEsc={true} >\n               <h3>{this.props.title} <a style={ {float:\"right\", cursor:\"pointer\"} } onClick={() => this.close()}><MdClose /></a></h3>               \n               {this.props.content}               \n             </Modal>\n        );\n    }\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,OAAO,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzCH,KAAK,CAACI,aAAa,CAAC,MAAM,CAAC;AAC3B,OAAO,MAAMC,QAAQ,SAASN,KAAK,CAACO,SAAS,CAAC;EAG1CC,KAAKA,CAAA,EAAG;IACJ;IACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC;EACnD;EAEAC,MAAMA,CAAA,EAAG;IACL;IACA,MAAM;MAAEC;IAAO,CAAC,GAAG,IAAI,CAACH,KAAK;IAE7B,oBACIL,OAAA,CAACH,KAAK;MAACW,MAAM,EAAEA,MAAO;MAACC,gBAAgB,EAAE,IAAK;MAAAC,QAAA,gBAC3CV,OAAA;QAAAU,QAAA,GAAK,IAAI,CAACL,KAAK,CAACM,KAAK,EAAC,GAAC,eAAAX,OAAA;UAAGY,KAAK,EAAG;YAACC,KAAK,EAAC,OAAO;YAAEC,MAAM,EAAC;UAAS,CAAG;UAACC,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACX,KAAK,EAAG;UAAAM,QAAA,eAACV,OAAA,CAACF,OAAO;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAG;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,EACtH,IAAI,CAACd,KAAK,CAACe,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACb;EAEjB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}